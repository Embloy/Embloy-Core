{
  "openapi": "3.0.3",
  "info": {
    "title": "Embloy API 0.1",
    "description": "The Embloy API is meant to extract Embloy's value off from the web browser onto external devices.",
    "termsOfService": "https://embloy.com/de/impressum/",
    "contact": {
      "email": "info@embloy.com"
    },
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.de.html"
    },
    "version": "0.1.1"
  },
  "externalDocs": {
    "description": "Find out more about Embloy",
    "url": "https://github.com/carlobortolan/Embloy"
  },
  "servers": [
    {
      "url": "https://embloy.onrender.com/api/v0/"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Methods for managing user accounts, user reviews & API access on embloy"
    },
    {
      "name": "jobs",
      "description": "Methods for managing jobs & job applications on embloy"
    }
  ],
  "paths": {
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register an user and create an Embloy account",
        "description": "This creates an user at its related records. In its entirety, this is referred to as an Embloy account. An freshly created Embloy account is inactive and first needs to be verified by the user.",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email address to be used for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "winston.smith@embloy.com"
            }
          },
          {
            "name": "first_name",
            "in": "body",
            "description": "The user's given names (first + middle name[s] [if any]) as stated on their identity card",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Winston"
            }
          },
          {
            "name": "last_name",
            "in": "body",
            "description": "The user's surname as stated in their identity card",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Smith"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password to be used for login.",
            "required": true,
            "schema": {
              "maxLength": 72,
              "type": "string",
              "example": "doublethink"
            }
          },
          {
            "name": "password_confirmation",
            "in": "body",
            "description": "The password to be used for login (must be exactly the same as above)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "doublethink"
            }
          }
        ],
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "format": "int64",
                      "example": "Account registered! Please activate this account to proceed"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`\n- `email`\n- `first_name`\n- `last_name`\n- `password`\n- `password_confirmation`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is malformed or unknown",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `email`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_TAKEN",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_TAKEN`: When a required attribute must be unique and already exists in the database. This specific error indicates that another Embloy account with the exact same email already exists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute exists",
                            "description": "A brief context specific classification of the error that occured"
                          },
                          "value": {
                            "type": "string",
                            "example": "winston.smith@embloy.com",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/verify": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Verify Embloy account credentials",
        "description": "This makes sure that the Embloy account was registerd successfully and automatically claims the initial refresh token. Verifying an account is mandatory before using any function of Embloy's plattform.",
        "operationId": "verifyUser",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The email address to be used for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "winston.smith@embloy.com"
            }
          },
          {
            "name": "password",
            "in": "path",
            "description": "The password to be used for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "doublethink"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refresh_token": {
                      "type": "string",
                      "format": "int64",
                      "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjExMDIsImV4cCI6MTY3ODQ4Mjk5MSwianRpIjoiOWRiMDkzODZlYTZjZTQ1MTQxMWY1MjdhYTIzYjhkODEiLCJpYXQiOjE2Nzg0Njg1OTEsImlzcyI6Imh1bW1lbEotU0ZDOCJ9.-fMsb8YlK7eNXGM9VrElHWFMWH4fVIv4CFebkwS9Ge0"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `email`\n- `password`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email||password": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `email||password`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is malformed or unknown",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_UNNECESSARY",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_UNNECESSARY`: When a requested task is unnecessary, the system refusess to process it. Often it helps to ask the system what your exact intentions are and wheter the specific call to the Embloy API is the standard method for it. This specific error implies that the Embloy account is aleady verified."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is already verified",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/auth/token/refresh": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Claim a refresh token",
        "description": "This first authenticates the account credentials and then issues a refresh token for this specific verified Embloy account. Refresh tokens only possess a time-limited validity. (current default validity is 2 weeks) Refresh tokens are primarily used to claim the much more powerful (but much shorter valid) access tokens.",
        "operationId": "createRefreshToken",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The email address to be used for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "winston.smith@embloy.com"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password to be used for login",
            "required": true,
            "schema": {
              "type": "string",
              "example": "doublethink"
            }
          },
          {
            "name": "validity",
            "in": "body",
            "description": "The validity interval for the refresh token in seconds (NOT IMPLEMENTED IN API v0)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 20000,
              "maximum": 1209600,
              "minimum": 1800
            }
          }
        ],
        "requestBody": {
          "description": "Create refresh token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "refresh_token": {
                      "type": "string",
                      "format": "int64",
                      "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjExMDIsImV4cCI6MTY3ODQ4NTQ4OSwianRpIjoiMmI0MmQwNTViYTY1ZTgxNDhiYTQxOGY4M2E4NmE5NTYiLCJpYXQiOjE2Nzg0NzEwODksImlzcyI6Imh1bW1lbEotU0ZDOCJ9.uQa37OkZj_v7G5vTfRwXGlXg_12ywsyZru5RuCAC-xg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email||password": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `validity`\n- `email|password`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email||password": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `email||password`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource. B: The Embloy account is currently blacklisted and has been temporarily banned. Please contact the support team for further assistance."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "format": "int64",
                      "example": "Please try again later. If this error persists, we recommend to contact our support team",
                      "description": "A message indicating that an internal server error has occurred. This specific error only occurs in case of an severe bug in the codebase."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/auth/token/access": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Claim an access token",
        "description": "This first verifies the provided refresh token and then issues an access token for the specific account associated with the refresh token. Access tokens only possess a very short time-limited validity or 20 minutes currently. Access tokens are a very important aspect of dealing with the Embloy API. Nearly every endpoint requires the provision of a valid access token. In conclusion access tokens are quite powerfull, have a short validity interval and can be claimend with a valid refresh token. Refresh tokens are less powerfull than access tokens but they possess a longer validity intervall and are mainly used for claiming access tokens.",
        "operationId": "createAccessToken",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "header",
            "description": "A valid refresh token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDM3MDg0NywianRpIjoiNTBkNzUyYTMxM2Y0ZDBiMTg3M2FhYmUwYmI2ZjNiMTUiLCJpYXQiOjE2ODAzNTY0NDcsImlzcyI6Imh1bW1lbEotU0ZDOCJ9.cenvg8tiy-in6xA1_IUXh0Q4XeIa540kfmZ6LenRM6g"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "format": "int64",
                      "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDM1NzkxNCwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.yTPkxb7tTq-qB0g9aXmznPktS1Zsa9VmVLByW3eDkCs"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue, request a fresh refresh token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource. B: The Embloy account and/or the refresh token is currently blacklisted and has been temporarily banned. Please contact the support team for further assistance."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/password": {
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Update the password for a user account",
        "description": "The provided access token is first verified, and then the password for the specific account associated with the access token is updated.",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "The new password to be used for login.",
            "required": true,
            "schema": {
              "maxLength": 72,
              "type": "string",
              "example": "doppeldenk"
            }
          },
          {
            "name": "password_confirmation",
            "in": "body",
            "description": "The new password to be used for login (must be exactly the same as above)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "doppeldenk"
            }
          }
        ],
        "requestBody": {
          "description": "Update password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Password updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `user`\n- `password`\n- `password_confirmation`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "password|password_confirmation": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `password|password_confirmation`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_MISMATCH",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_MISMATCH`: If attributes do not match or are not in the expected format. This error occurs when two or more attributes are expected to match or have a specific linkage, but they do not meet the criteria. For example, this error may occur when a user is asked to enter and confirm a password, and the two entries do not match, or when a date is entered in an incorrect format. To resolve this issue, please double-check the relevant requirements and ensure that there are no spelling or formatting errors in the input data. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Required matching attributes do not match",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/password/reset": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Request a new password",
        "description": "The provided access token is first verified, and then an automated password reset process is initiated.",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Password reset process initiated! Please check your mailbox."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/jobs": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List own job postings",
        "description": "The provided access token is first verified, and then a list of all the jobs associated with its owner is generated.",
        "operationId": "listOwnJobs",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jobs": {
                      "type": "array",
                      "description": "This is a list of currently active and visible job postings for the specified account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "job_id": {
                            "type": "integer",
                            "example": 1984,
                            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job that the user created."
                          },
                          "job_type": {
                            "type": "string",
                            "example": "Marketing",
                            "description": "The job's displayed category is determined by the branch it belongs to within the system."
                          },
                          "job_type_value": {
                            "type": "integer",
                            "example": 11,
                            "description": "The job_type_value is an integer representation used to allocate similar job_types together based on a hierarchy, where many job_types can be summarized under the same value."
                          },
                          "job_status": {
                            "type": "integer",
                            "example": 1,
                            "description": "A job with a job_status of 0 will be excluded from Embloy's Backend and Embloy's Job Ranking Engine and will not be visible to other users, while a job with a job_status of 1 will be considered by the engine and made visible to other users. A job with status 0 can be considered as removed."
                          },
                          "status": {
                            "type": "string",
                            "example": "public",
                            "description": "This indicates the visibility of a job posting. A job marked as private will not be considered by Embloy's Job Ranking Engine and will not be visible to other users. On the other hand, a job marked as public will be visible to other users and will also be displayed to relevant job seekers in the feed, increasing its visibility to potential candidates."
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 9,
                            "description": "The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that created the specific job."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 120,
                            "description": "The duration of the job in minutes."
                          },
                          "code_lang": {
                            "type": "string",
                            "example": "EN",
                            "description": "The required language at the workplace as a two character code."
                          },
                          "title": {
                            "type": "string",
                            "example": "Communications talent wanted",
                            "description": "The title for the job post."
                          },
                          "position": {
                            "type": "string",
                            "example": "Brand Ambassador",
                            "description": "The specific job role."
                          },
                          "description": {
                            "type": "string",
                            "minLength": 10,
                            "example": "We are seeking an individual with strong rhetorical skills to promote our brand to people passing by. [...]",
                            "description": "A detailed description of the job."
                          },
                          "key_skills": {
                            "type": "string",
                            "example": "open mindedness, eloquence, and always a smile on the face",
                            "description": "A brief outline of the required skills for the job."
                          },
                          "salary": {
                            "type": "integer",
                            "example": 100,
                            "description": "The total amount of compensation for the entire period of the job, in the currency specified."
                          },
                          "currency": {
                            "type": "string",
                            "example": "euro",
                            "description": "The currency of the salary denoted above."
                          },
                          "image_url": {
                            "type": "string",
                            "example": "https://embloy.com/drive/v0/img/jobs/1984",
                            "description": "The URL where the image(s) for this particular job post can be found."
                          },
                          "start_slot": {
                            "type": "string",
                            "example": "2023-04-08T14:00:00.000Z",
                            "description": "The specific start date and time for this job."
                          },
                          "latitude": {
                            "type": "number",
                            "format": "double",
                            "example": 51.5207794,
                            "description": "The latitude coordinates for the job location."
                          },
                          "longitude": {
                            "type": "number",
                            "format": "double",
                            "example": -0.1293754,
                            "description": "The longitude coordinates for the job location."
                          },
                          "country_code": {
                            "type": "string",
                            "example": "GB",
                            "description": "The two character country code for the job location."
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "WC1E 7HU",
                            "description": "The postal code for the job location."
                          },
                          "city": {
                            "type": "string",
                            "example": "London",
                            "description": "The locacity for the job location."
                          },
                          "address": {
                            "type": "string",
                            "example": "251 Malet Street",
                            "description": "The address for the job location."
                          },
                          "view_count": {
                            "type": "integer",
                            "example": 2100,
                            "description": "The total number of views for this specific job post."
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-03-23T12:21:42.623Z",
                            "description": "The specific date and time when this job post was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-04-01T10:31:01.623Z",
                            "description": "The specific date and time when this job post was updated the last time."
                          },
                          "applications_count": {
                            "type": "integer",
                            "example": 101,
                            "description": "The total number of applications for this specific job post."
                          },
                          "employer_rating": {
                            "type": "integer",
                            "example": 4.4,
                            "description": "The average rating for the user account specified by user_id."
                          },
                          "job_notifications": {
                            "type": "string",
                            "example": 1,
                            "description": "If the job_notifications value for a job is 0, it will not be included in Embloy's notification service, and the above specified user account will not receive any push notifications for it. However, if the job_notifications value is set to 1, the job will be considered for Embloy's notification service, and the above specified user account will receive push notifications for it."
                          },
                          "boost": {
                            "type": "integer",
                            "example": 84,
                            "description": "This information pertains to Embloy's Job Ranking Engine and is not relevant to the user. Therefore, this claim will not be included in API V1.x."
                          },
                          "job_value": {
                            "type": "string",
                            "example": "01010000A0E6100000000000000000264000000000000048400000000000003940",
                            "description": "This information pertains to Embloy's Job Ranking Engine and is not relevant to the user. Therefore, this claim will not be included in API V1.x."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/applications": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List own job applications",
        "description": "The provided access token is first verified, and then a list of all the job applications associated with its owner is generated.",
        "operationId": "listOwnApplications",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "applications": {
                      "type": "array",
                      "description": "This is a list of submitted applications to jobs for the specified account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "job_id": {
                            "type": "integer",
                            "example": 3968,
                            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job that the user applied for."
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 9,
                            "description": "The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that applied for the specific job."
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-03-23T12:21:42.623Z",
                            "description": "The specific date and time when this job post was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-04-01T10:31:01.623Z",
                            "description": "The specific date and time when this job post was updated the last time."
                          },
                          "status": {
                            "type": "string",
                            "example": 1,
                            "description": "Applications with a status of -1 indicate that they have been rejected, while applications with a status of 1 have been accepted. Applications with a status of 0 are still awaiting a response."
                          },
                          "application_text": {
                            "type": "string",
                            "example": "Hey, I am an expirenced story teller and would love to support your sales team. [...]",
                            "description": "A brief message to the employer with the an application."
                          },
                          "application_documents": {
                            "type": "string",
                            "example": "public",
                            "description": "The URL where supporting documents(s) for this particular application can be found."
                          },
                          "response": {
                            "type": "string",
                            "example": "public",
                            "description": "A brief message from the employer regarding the application review status."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/reviews": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "List own received reviews",
        "description": "The provided access token is first verified, and then a list of all reviews associated with its owner is generated.The reviews cover both employer and employee submissions, providing a comprehensive overview of the experiences and perspectives.",
        "operationId": "listOwnREceivedReviews",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reviews": {
                      "type": "array",
                      "description": "This is a list of submitted applications to jobs for the specified account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "review_id": {
                            "type": "integer",
                            "example": 42,
                            "description": "The specific review_id is a unique identifier for a specific review that is permanently assigned to that review and does not correspond to any other review in the system. This review_id corresponds to the review that the user has received."
                          },
                          "rating": {
                            "type": "string",
                            "example": 5,
                            "description": "The rating score that the user has received within this specific review."
                          },
                          "message": {
                            "type": "string",
                            "example": "We had a great experience working with him and would definitely hire him again. He was professional, efficient, and delivered high-quality work.",
                            "description": "Detailed review message outlining the strengths and areas for improvement of the user submitted by the reviewer."
                          },
                          "created_by": {
                            "type": "integer",
                            "example": 1778112,
                            "description": "This refers to a existing user_id. The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that submitted the review for the user specified in subject."
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-03-23T12:21:42.623Z",
                            "description": "The specific date and time when this review was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-04-01T10:31:01.623Z",
                            "description": "The specific date and time when this review was updated the last time."
                          },
                          "job_id": {
                            "type": "integer",
                            "example": 3968,
                            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job that is \\\"links\\\" the user receiving the review to the user submitting it."
                          },
                          "subject": {
                            "type": "integer",
                            "example": 9,
                            "description": "This refers to a existing user_id. The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that received the review from the user specified in created_by."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{id}/reviews": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Submit a review",
        "description": "The provided access token is first verified, and then a review of a given user is submitted. A review must be bound to a certain job. A user can only review another user once for every job, and if multiple reviews from the same user are received, it is because those reviews came from different jobs. Users who are actual employees can only be reviewed by the employer for that job, and the employer can only review users who are actual employees for that same job.",
        "operationId": "createReview",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The user_id of the reviewed user",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "job_id",
            "in": "body",
            "description": "This job_id corresponds to the job that is \\\"links\\\" the user receiving the review to the user submitting it.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 84,
              "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system."
            }
          },
          {
            "name": "rating",
            "in": "body",
            "description": "The rating score.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 5,
              "description": "Accepted scores are 0,1,2,3,4,5"
            }
          },
          {
            "name": "message",
            "in": "body",
            "description": "Review message outlining the strengths and areas for improvement of the user submitted by the reviewer.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Great guy, a hard & loyal worker."
            }
          }
        ],
        "requestBody": {
          "description": "Create refresh token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "example": "Review submitted\""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `job_id`\n- `rating`\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)                      \n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource. B: The requested resource requires some form of a higher level of security, such as ownership, collaboratorship, or need-to-know-basis, that was not satisfied by the attempted access with the specific Embloy account. Contact our support team if the problem persists and you believe you should have access to this resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "review": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `review`\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_UNNECESSARY",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_UNNECESSARY`: When a requested task is unnecessary, the system refusess to process it. Often it helps to ask the system what your exact intentions are and wheter the specific call to the Embloy API is the standard method for it. This specific error implies that the Embloy account is aleady verified.\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is already submitted",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Call the user specific job feed",
        "description": "The provided access token is first verified, and then a user specific job feed is generated and returned.",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "latitude",
            "in": "path",
            "description": "The latitude coordinates for the job location.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "float",
              "example": 51.5207794
            }
          },
          {
            "name": "longitude",
            "in": "path",
            "description": "The longitude coordinates for the job location.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "float",
              "example": -0.1293754
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feed": {
                      "type": "array",
                      "description": "This is a list of currently active and visible job postings for the specified account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "job_id": {
                            "type": "integer",
                            "example": 1984,
                            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job that the user created."
                          },
                          "job_type": {
                            "type": "string",
                            "example": "Marketing",
                            "description": "The job's displayed category is determined by the branch it belongs to within the system."
                          },
                          "job_type_value": {
                            "type": "integer",
                            "example": 11,
                            "description": "The job_type_value is an integer representation used to allocate similar job_types together based on a hierarchy, where many job_types can be summarized under the same value."
                          },
                          "job_status": {
                            "type": "integer",
                            "example": 1,
                            "description": "A job with a job_status of 0 will be excluded from Embloy's Backend and Embloy's Job Ranking Engine and will not be visible to other users, while a job with a job_status of 1 will be considered by the engine and made visible to other users. A job with status 0 can be considered as removed."
                          },
                          "status": {
                            "type": "string",
                            "example": "public",
                            "description": "This indicates the visibility of a job posting. A job marked as private will not be considered by Embloy's Job Ranking Engine and will not be visible to other users. On the other hand, a job marked as public will be visible to other users and will also be displayed to relevant job seekers in the feed, increasing its visibility to potential candidates."
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 9,
                            "description": "The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that created the specific job."
                          },
                          "duration": {
                            "type": "integer",
                            "example": 120,
                            "description": "The duration of the job in minutes."
                          },
                          "code_lang": {
                            "type": "string",
                            "example": "EN",
                            "description": "The required language at the workplace as a two character code."
                          },
                          "title": {
                            "type": "string",
                            "example": "Who wants to be a Campus Brand Ambassador?",
                            "description": "The title for the job post."
                          },
                          "position": {
                            "type": "string",
                            "example": "Brand Ambassador",
                            "description": "The specific job role."
                          },
                          "description": {
                            "type": "string",
                            "minLength": 10,
                            "example": "We are seeking an individual with strong rhetorical skills to promote our brand to people passing by. [...]",
                            "description": "A detailed description of the job."
                          },
                          "key_skills": {
                            "type": "string",
                            "example": "open mindedness, eloquence, and always a smile on the face",
                            "description": "A brief outline of the required skills for the job."
                          },
                          "salary": {
                            "type": "integer",
                            "example": 84,
                            "description": "The total amount of compensation for the entire period of the job, in the currency specified."
                          },
                          "currency": {
                            "type": "string",
                            "example": "gbp",
                            "description": "The currency of the salary denoted above."
                          },
                          "image_url": {
                            "type": "string",
                            "example": "https://embloy.com/drive/v0/img/jobs/1984",
                            "description": "The URL where the image(s) for this particular job post can be found."
                          },
                          "start_slot": {
                            "type": "string",
                            "example": "2023-04-08T14:00:00.000Z",
                            "description": "The specific start date and time for this job."
                          },
                          "latitude": {
                            "type": "number",
                            "format": "double",
                            "example": 51.5207794,
                            "description": "The latitude coordinates for the job location."
                          },
                          "longitude": {
                            "type": "number",
                            "format": "double",
                            "example": -0.1293754,
                            "description": "The longitude coordinates for the job location."
                          },
                          "country_code": {
                            "type": "string",
                            "example": "GB",
                            "description": "The two character country code for the job location."
                          },
                          "postal_code": {
                            "type": "string",
                            "example": "WC1E 7HU",
                            "description": "The postal code for the job location."
                          },
                          "city": {
                            "type": "string",
                            "example": "London",
                            "description": "The locacity for the job location."
                          },
                          "address": {
                            "type": "string",
                            "example": "251 Malet Street",
                            "description": "The address for the job location."
                          },
                          "view_count": {
                            "type": "integer",
                            "example": 2100,
                            "description": "The total number of views for this specific job post."
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-03-23T12:21:42.623Z",
                            "description": "The specific date and time when this job post was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-04-01T10:31:01.623Z",
                            "description": "The specific date and time when this job post was updated the last time."
                          },
                          "applications_count": {
                            "type": "integer",
                            "example": 101,
                            "description": "The total number of applications for this specific job post."
                          },
                          "employer_rating": {
                            "type": "integer",
                            "example": 4.4,
                            "description": "The average rating for the user account specified by user_id."
                          },
                          "job_notifications": {
                            "type": "string",
                            "example": 1,
                            "description": "If the job_notifications value for a job is 0, it will not be included in Embloy's notification service, and the above specified user account will not receive any push notifications for it. However, if the job_notifications value is set to 1, the job will be considered for Embloy's notification service, and the above specified user account will receive push notifications for it."
                          },
                          "boost": {
                            "type": "integer",
                            "example": 84,
                            "description": "This information pertains to Embloy's Job Ranking Engine and is not relevant to the user. Therefore, this claim will not be included in API V1.x."
                          },
                          "job_value": {
                            "type": "string",
                            "example": "01010000A0E6100000000000000000264000000000000048400000000000003940",
                            "description": "This information pertains to Embloy's Job Ranking Engine and is not relevant to the user. Therefore, this claim will not be included in API V1.x."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `latitude`\n- `longitude`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists. It should be noted that if the provided body is correctly formatted but contains no data to update or does not match any of the keys that can be updated, the API will not return an error but instead will simply not perform any updates."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "format": "int64",
                      "example": "Please try again later. If this error persists, we recommend to contact our support team",
                      "description": "A message indicating that an internal server error has occurred. This specific error only occurs in case of an severe bug in the codebase."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Post a new job",
        "description": "The provided access token is first verified, and then a new job is created. Upon creation, a job is listed as public. Public jobs undergo evaluation by Embloy's Job Ranking Engine and may appear in a user's individual job feed. Moreover, such jobs are open to applications from interested candidates. The job creator/owner or correspondingly authorized users correspondingly authorized users are able to limit the visibility of the job to \\\"private\\\". Private jobs are ignored by the Job Ranking Engine and so do not appear to any job seeking user.",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "title",
            "in": "body",
            "description": "The title for the job post.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Communications talent wanted"
            }
          },
          {
            "name": "description",
            "in": "body",
            "description": "A detailed description of the job.",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 10,
              "example": "We are seeking an individual with strong rhetorical skills to promote our brand to people passing by. [...]"
            }
          },
          {
            "name": "job_notification",
            "in": "body",
            "description": "If the job_notifications value for a job is 0, it will not be included in Embloy's notification service, and the above specified user account will not receive any push notifications for it. However, if the job_notifications value is set to 1, the job will be considered for Embloy's notification service, and the above specified user account will receive push notifications for it.",
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 1
            }
          },
          {
            "name": "start_slot",
            "in": "body",
            "description": "The specific start date and time for this job.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1949-06-08T08:12:00.000Z"
            }
          },
          {
            "name": "latitude",
            "in": "body",
            "description": "The latitude coordinates for the job location.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "float",
              "example": 51.5207794
            }
          },
          {
            "name": "longitude",
            "in": "body",
            "description": "The longitude coordinates for the job location.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "float",
              "example": -0.1293754
            }
          },
          {
            "name": "job_type",
            "in": "body",
            "description": "The job's displayed category is determined by the branch it belongs to within the system. This branch is specified by job_type. To ensure accuracy, it is recommended to review the current system regulations for job_types and select the most appropriate one.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Marketing"
            }
          },
          {
            "name": "position",
            "in": "body",
            "description": "The specific job role.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Brand Ambassador"
            }
          },
          {
            "name": "salary",
            "in": "body",
            "description": "The total amount of compensation for the entire period of the job, in the currency specified.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 100
            }
          },
          {
            "name": "currency",
            "in": "body",
            "description": "The currency of the salary denoted above.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "euro"
            }
          },
          {
            "name": "key_skills",
            "in": "body",
            "description": "A brief outline of the required skills for the job.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "open mindedness, eloquence, and always a smile on the face"
            }
          },
          {
            "name": "duration",
            "in": "body",
            "description": "The duration of the job in minutes.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 120
            }
          }
        ],
        "requestBody": {
          "description": "Create job",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Job"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Job created!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `title`\n- `description`\n- `start_slot`\n- `latitude`\n- `longitude`\n- `job_type`\n- `position`\n- `salary`\n- `currency`\n- `key_skills`\n- `duration`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_TOO_SHORT`: If a specific input fails to meet the minimum size requirement (e.g. character count) for a required attribute. The documentation for that attribute will denote such constraints.\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_type": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `job_type`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "jobs"
        ],
        "summary": "Update a job",
        "description": "The provided access token is first verified, and then a new job is created. Upon creation, a job is listed as public. Public jobs undergo evaluation by Embloy's Job Ranking Engine and may appear in a user's individual job feed. Moreover, such jobs are open to applications from interested candidates. The job creator/owner or correspondingly authorized users correspondingly authorized users are able to limit the visibility of the job to \\\"private\\\". Private jobs are ignored by the Job Ranking Engine and so do not appear to any job seeking user.",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 4891
            }
          },
          {
            "name": "title",
            "in": "body",
            "description": "The title for the job post.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Who wants to be a Campus Brand Ambassador?"
            }
          },
          {
            "name": "description",
            "in": "body",
            "description": "A detailed description of the job.",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 10,
              "example": "We are seeking an individual with strong rhetorical skills to promote our brand to people passing by. [...]"
            }
          },
          {
            "name": "job_notification",
            "in": "body",
            "description": "If the job_notifications value for a job is 0, it will not be included in Embloy's notification service, and the above specified user account will not receive any push notifications for it. However, if the job_notifications value is set to 1, the job will be considered for Embloy's notification service, and the above specified user account will receive push notifications for it.",
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 1
            }
          },
          {
            "name": "start_slot",
            "in": "body",
            "description": "The specific start date and time for this job.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1949-06-08T08:12:00.000Z"
            }
          },
          {
            "name": "latitude",
            "in": "body",
            "description": "The latitude coordinates for the job location.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "float",
              "example": 51.5207794
            }
          },
          {
            "name": "longitude",
            "in": "body",
            "description": "The longitude coordinates for the job location.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "float",
              "example": -0.1293754
            }
          },
          {
            "name": "job_type",
            "in": "body",
            "description": "The job's displayed category is determined by the branch it belongs to within the system. This branch is specified by job_type. To ensure accuracy, it is recommended to review the current system regulations for job_types and select the most appropriate one.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Marketing"
            }
          },
          {
            "name": "status",
            "in": "body",
            "description": "This indicates the visibility of a job posting. A job marked as private will not be considered by Embloy's Job Ranking Engine and will not be visible to other users. On the other hand, a job marked as public will be visible to other users and will also be displayed to relevant job seekers in the feed, increasing its visibility to potential candidates.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "public"
            }
          },
          {
            "name": "job_status",
            "in": "body",
            "description": "A job with a job_status of 0 will be excluded from Embloy's Backend and Embloy's Job Ranking Engine and will not be visible to other users, while a job with a job_status of 1 will be considered by the engine and made visible to other users. A job with status 0 can be considered as removed.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 1
            }
          },
          {
            "name": "position",
            "in": "body",
            "description": "The specific job role.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Brand Ambassador"
            }
          },
          {
            "name": "salary",
            "in": "body",
            "description": "The total amount of compensation for the entire period of the job, in the currency specified.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 100
            }
          },
          {
            "name": "currency",
            "in": "body",
            "description": "The currency of the salary denoted above.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "gbp"
            }
          },
          {
            "name": "key_skills",
            "in": "body",
            "description": "A brief outline of the required skills for the job.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "open mindedness, eloquence, and always a smile on the face"
            }
          },
          {
            "name": "duration",
            "in": "body",
            "description": "The duration of the job in minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 120
            }
          }
        ],
        "requestBody": {
          "description": "Update job",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Job updated!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `title`\n- `description`\n- `start_slot`\n- `latitude`\n- `longitude`\n- `job_type`\n- `position`\n- `salary`\n- `currency`\n- `key_skills`\n- `duration`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_TOO_SHORT`: If a specific input fails to meet the minimum size requirement (e.g. character count) for a required attribute. The documentation for that attribute will denote such constraints.\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists. It should be noted that if the provided body is correctly formatted but contains no data to update or does not match any of the keys that can be updated, the API will not return an error but instead will simply not perform any updates."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource. B: The requested resource requires some form of a higher level of security, such as ownership, collaboratorship, or need-to-know-basis, that was not satisfied by the attempted access with the specific Embloy account. Contact our support team if the problem persists and you believe you should have access to this resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `job_type`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_REMOVED",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_REMOVED`: If the attribute that is tried to be accessed was removed. Double check your archive and if needed contact our support team to discuss data retrieval options"
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute was removed and cannot be accessed anymore",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Destroy a job",
        "description": "Please note that this method is not part of the standard usage and requires editor-level or above user permissions. Use with caution. The provided access token is first verified, and then a given job is irreversibly deleted from the system. To only remove a job post you can either use the PATCH /jobs method and change the job_status to 0.",
        "security": [
          {
            "access_token": [
              "editor"
            ]
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 4891
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Job deleted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `id`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists. It should be noted that if the provided body is correctly formatted but contains no data to update or does not match any of the keys that can be updated, the API will not return an error but instead will simply not perform any updates."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not the Editor role. Please verify the account to access the resource. Contact our support team if the problem persists and you believe you should have access to this resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}/applications": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "List applications for a given job",
        "description": "The provided access token is first verified, and then all received applications for the given jobs are returned.",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 4891
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feed": {
                      "type": "array",
                      "description": "This is a list of currently active and visible job postings for the specified account.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "job_id": {
                            "type": "integer",
                            "example": 2823,
                            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job that the user created."
                          },
                          "user_id": {
                            "type": "integer",
                            "example": 9,
                            "description": "The specific user_id is a unique identifier for a specific user account that is permanently assigned to that user account and does not correspond to any other user account in the system. This user_id corresponds to the user that applied for the specific job. In the specific case of applications this also functions as a symbolic link to the applicants cv (their Embloy profile)"
                          },
                          "created_at": {
                            "type": "string",
                            "example": "2023-03-23T12:21:42.623Z",
                            "description": "The specific date and time when this application was created."
                          },
                          "updated_at": {
                            "type": "string",
                            "example": "2023-04-01T10:31:01.623Z",
                            "description": "The specific date and time when this application was updated the last time."
                          },
                          "status": {
                            "type": "string",
                            "format": "int64",
                            "example": 0,
                            "description": "This indicates the current status of a specific application. An application with status -1 is considered to be rejected, 0 is considered to be pending and 1 is considered to be accepted."
                          },
                          "application_text": {
                            "type": "string",
                            "minLength": 10,
                            "example": "This application was submitted through the v.0 Embloy API",
                            "description": "An individual application text (based on own saveable templates)."
                          },
                          "application_documents": {
                            "type": "string",
                            "example": "https://embloy.com/drive/v0/docs/applications/2823",
                            "description": "The URL where additional documents for this particular application can be found."
                          },
                          "response": {
                            "type": "string",
                            "minLength": 10,
                            "example": "Dear Diogenes, I am writing to express my interest in the Barista job. I am a highly joyous and gentle [...]",
                            "description": "The individual application response from the employer (based on own saveable templates)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists. It should be noted that if the provided body is correctly formatted but contains no data to update or does not match any of the keys that can be updated, the API will not return an error but instead will simply not perform any updates."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "List applications for a given job",
        "description": "The provided access token is first verified, and then a new application in the name of the associated user is submitted to the specified job. For Embloy v0 the user account (in detail the user profile) is considered to be the figurehead with which one applies for a job.",
        "parameters": [
          {
            "name": "access_token",
            "in": "header",
            "description": "A valid access token",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOjksImV4cCI6MTY4MDk3MzE1MSwidHlwIjoidmVyaWZpZWQiLCJpc3MiOiJodW1tZWxKLVNGQzgifQ.93iFsNUwhoQewsiGsc7fBiW8U6BjyoSmr16n-jBvN9I"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The specific job_id is a unique identifier for a specific job that is permanently assigned to that job and does not correspond to any other job in the system. This job_id corresponds to the job to be updated.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "int64",
              "example": 4891
            }
          },
          {
            "name": "application_text",
            "in": "body",
            "description": "An individual application text (based on own saveable templates).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Dear Pythagoras, I am writing to express my interest in [...]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "format": "int64",
                      "example": "Application submitted!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`\n- `job`\n- `application`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_BLANK",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_BLANK`: When a required attribute is blank. All required parameters are denoted above. If all required attributes were indeed given but this error gets raised it could be that the attributs are provided falsely (e.g. via header or via path instead of body ...)\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors or external manipulation. To resolve the issue double check the formatting requirements and try again. Contact our support team if the problem persists. It should be noted that if the provided body is correctly formatted but contains no data to update or does not match any of the keys that can be updated, the API will not return an error but instead will simply not perform any updates."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can't be blank",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `token`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is invalid or expired",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_RAC",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_RAC`: The requested resource cannot be accessed due to access restrictions. The server has understood the request but refuses to authorize it because it violates security policies. This error may occur due to one of the following reasons: A: The Embloy account has not been verified. Please verify the account to access the resource."
                          },
                          "description": {
                            "type": "string",
                            "example": "Proceeding is inhibited by an access restriction",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `user`\n- `job`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_INVALID",
                            "description": "The type of error that occurred. Possible values are:\n- `ERR_INVALID`: If an attribute is invalid, it may be due to an expired validity or other factors. This could be caused by internal system errors, external manipulation or a formatting error. To resolve the issue, request a fresh access token, double check the formatting requirements and try again. Contact our support team if the problem persists."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute can not be retrieved",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "application": {
                      "type": "array",
                      "description": "The attribute that caused the error. Possible values are:\n- `application`",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "example": "ERR_UNNECESSARY",
                            "description": "The type of error that occurred. Possible values are:\n\n- `ERR_UNNECESSARY`: When a requested task is unnecessary, the system refusess to process it. Often it helps to ask the system what your exact intentions are and wheter the specific call to the Embloy API is the standard method for it. This specific error implies that the Embloy account is aleady verified."
                          },
                          "description": {
                            "type": "string",
                            "example": "Attribute is already submitted",
                            "description": "A brief context specific classification of the error that occured"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "int64",
                "example": "winston.smith@embloy.com"
              },
              "first_name": {
                "type": "string",
                "example": "Winston"
              },
              "last_name": {
                "type": "string",
                "example": "Smith"
              },
              "password": {
                "type": "string",
                "example": "doublethink"
              },
              "password_confirmation": {
                "type": "string",
                "example": "doublethink"
              }
            }
          }
        }
      },
      "PasswordUpdate": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "example": "doppeldenk"
              },
              "password_confirmation": {
                "type": "string",
                "example": "doppeldenk"
              }
            }
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "winston.smith@embloy.com"
              },
              "password": {
                "type": "string",
                "example": "doublethink"
              }
            }
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "review": {
            "type": "object",
            "properties": {
              "job_id": {
                "type": "integer",
                "example": 84
              },
              "rating": {
                "type": "integer",
                "example": 5
              },
              "message": {
                "type": "string",
                "example": "Great guy, a hard & loyal worker."
              }
            }
          }
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "job": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Communications talent wanted"
              },
              "description": {
                "type": "string",
                "example": "We are seeking an individual with strong rhetorical skills to promote our brand to people passing by. [...]"
              },
              "job_notifications": {
                "type": "integer",
                "example": 1
              },
              "start_slot": {
                "type": "string",
                "example": "1949-06-08T08:12:00.000Z"
              },
              "latitude": {
                "type": "number",
                "format": "double",
                "example": 51.5207794
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "example": -0.1293754
              },
              "job_type": {
                "type": "string",
                "example": "Marketing"
              },
              "position": {
                "type": "string",
                "example": "Brand Ambassador"
              },
              "salary": {
                "type": "integer",
                "example": 100
              },
              "currency": {
                "type": "string",
                "example": "euro"
              },
              "key_skills": {
                "type": "string",
                "example": "open mindedness, eloquence, and always a smile on the face"
              },
              "duration": {
                "type": "integer",
                "example": 120
              }
            }
          }
        }
      },
      "UpJob": {
        "type": "object",
        "properties": {
          "job": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
                "example": "Who wants to be a Campus Brand Ambassador?"
              },
              "salary": {
                "type": "integer",
                "example": 84
              },
              "currency": {
                "type": "string",
                "example": "gbp"
              }
            }
          }
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Job"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "access_token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-access-token-roles": [
          "admin",
          "editor",
          "developer",
          "moderator",
          "verified"
        ]
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account"
            }
          }
        }
      }
    }
  }
}